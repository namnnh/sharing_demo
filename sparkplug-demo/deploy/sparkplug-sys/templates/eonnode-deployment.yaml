apiVersion: apps/v1
kind: Deployment
metadata:
  name: eonnode
  namespace: main-app
  labels:
    iot.service.name: eonnode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eonnode
  template:
    metadata:
      labels:
        app: eonnode
    spec:
      hostname: iotsensorsmqtt-spb
      containers:
      - name: eonnode
        image: amineamaach/sensors-sparkplugb:v1.0.0
        volumeMounts:
        - name: config-volume
          mountPath: /configs/config.json
          subPath: config.json
        ports:
        - containerPort: 8080
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: eonnode-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    iot.service.name: eonnode
  name: eonnode
  namespace: main-app
spec:
  selector:
    iot.service.name: eonnode
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eonnode-config
  namespace: main-app
data:
  config.json: |
    {
      "mqtt_config": {
        "url": "{{ .Values.mqtt.url }}",
        "qos": 1,
        "client_id": "",
        "user": "",
        "password": "",
        "keep_alive": 5,
        "connect_timeout": "30s",
        "connect_retry": 3,
        "clean_start": false,
        "session_expiry_interval": 60
      },
      "eon_node": {
        "namespace": "spBv1.0",
        "group_id": "IoTSensors",
        "node_id": "SparkplugB",
        "devices": [
          {
            "device_id": "emulatedDevice",
            "store_and_forward": true,
            "time_to_live": 10,
            "simulators": [
              {
                "sensor_id": "Temperature",
                "mean": 30.6,
                "standard_deviation": 3.1,
                "delay_min": 3,
                "delay_max": 6,
                "randomize": false
              }
            ]
          }
        ]
      }
    }